on:
  pull_request:
    branches:
      - main
      - master
  push:
    branches:
      - main
      - master
      - develop
name: "Build & Release"
jobs:
  build:
    name: Build & Release
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64
      - name: Create .env file
        run: echo "${{ secrets.ENV_FILE }}" > .env
      - name: Create properties file
        run: |
          echo "sdk.dir=C:\\Users\\runneradmin\\AppData\\Local\\Android\\sdk" > android/local.properties
          echo "flutter.sdk=C:\\flutter" >> android/local.properties
          echo "${{ secrets.LOCAL_PROPERTIES }}" > android/local.properties
        shell: bash
      - name: Verify local.properties Exists
        run: |
          echo "Checking local.properties content:"
          cat android/local.properties
        shell: bash
      - name: Check if Gradle Wrapper Exists
        run: |
          dir android
        shell: pwsh
      - name: Decode Keystore (Windows)
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks
        shell: bash

      - name: Debug Project Structure
        run: |
          echo "Current Working Directory:"
          pwd
          echo "Project Structure:"
          tree /F /A
        shell: pwsh


      - name: Create Keystore Properties (Windows)
        run: |
          echo "storeFile=keystore.jks" > android/key.properties
          echo "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/key.properties
          echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/key.properties
        shell: bash
      - name: Clean Gradle
        run: |
          cd android
          .\gradlew.bat clean
        shell: pwsh
      - run: flutter pub get
      - run: flutter build apk --release --split-per-abi
      - name: Push to Releases
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/apk/release/*.apk"
          tag: v1.0.${{ github.run_number }}
          token: ${{ secrets.TOKEN }}